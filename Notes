1. Create Project with CLI :

   dotnet new sln
   dotnet new webapi -n API
   dotnet new classlib -n Application
   dotnet new classlib -n Domain
   dotnet new classlib -n Persistence

   dotnet sln add API/API.csproj
   dotnet sln add Application/Application.csproj
   dotnet sln add Domain/Domain.csproj
   dotnet sln add Persistence/Persistence.csproj

   cd API
   dotnet add reference ../Application/Application.csproj
   cd ../Application
   dotnet add reference ../Domain/Domain.csproj
   dotnet add reference ../Persistence/Persistence.csproj
   cd ../Persistence
   dotnet add reference ../Domain/Domain.csproj
   cd ..

   dotnet restore

2. Configure the local environment in the LaunchSettings.json
   "launchBrowser": false,
   "applicationUrl": "http://localhost:5000",

3. Configur Program.cs
   remove https middleware

4. Create an Entity Class in Domain Project
5. Install EntityFrameworkCore.Sqlite from Nuget in Persistence Project
6. Create an DataContext Class in Persistence Project
7. Add a connection string to the appsettings.Development.json
8. Configure Program.cs
   add dbContext and connectionString
9. Install dotnet EntityFramework tool
   dotnet tool install --global dotnet-ef
10. Do Database Migration
    install Microsoft.EntityFrameworkCore.Design from Nuget in API Project
    dotnet ef migrations add InitialCreate -s API -p Persistence
11. Configure Program.cs
    add automatic migrations above app.Run();
12. Create Seed Class in Persistence Project
13. Configure Program.cs
    Call the static method on the seed class after the database migration code
14. Create a BaseApiController class in the Controllers folder of the API project
15. Create a CategoriesController class in the Controllers folder of the API project that inherits from the BaseApiController class
16. Install MediatR.Extensions.Microsoft.DependencyInjection into Application Project
17. Create a List class in the Categories folder of the Application Project
18. Create Query and Handler class inside List class
19. Configure Program.cs
    add MediatR middleware
20. Configure List Method on CategoriesController
    use Mediator method to get List
21. Create a Details class in the Categories folder of the Application Project
22. Configure Details Method on CategoriesController
    use Mediator method to get Details
23. Create a Create class ini the Categories folder of the Application Project
24. Create Command and Handler class inside Edit class
25. Create Method EditCategory on CategoriesController
26. Install AutoMapper.Extensions.Microsoft.DependencyInjection into Application Project
27. Create Folder Core in Application Project
28. Create MappingProfiles Class in Core folder of Application Project
29. Create a Edit class ini the Categories folder of the Application Project
30. Create Command and Handler class inside Edit class
31. Create Method EditCategory on CategoriesController
32. Create Extensions on API Project
33. Create ApplicationServiceExtensions in Extensions folder of API Project
34. Configure Program.cs
    call ApplicationServiceExtensions static method
